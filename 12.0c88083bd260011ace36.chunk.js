webpackJsonp([12],{TLFe:function(e,o,n){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var t=n("/oeL"),i=n("qbdv"),a=n("bm2B"),r=n("CPp0"),s=n("BkNc"),l=n("FEt5"),c=(n("5v8a"),n("ww/K")),p=n("ue/A"),g=n("bXVx"),d=n("FMac"),f=this&&this.__decorate||function(e,o,n,t){var i,a=arguments.length,r=a<3?o:null===t?t=Object.getOwnPropertyDescriptor(o,n):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,n,t);else for(var s=e.length-1;s>=0;s--)(i=e[s])&&(r=(a<3?i(r):a>3?i(o,n,r):i(o,n))||r);return a>3&&r&&Object.defineProperty(o,n,r),r},u=this&&this.__metadata||function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},m=this&&this.__param||function(e,o){return function(n,t){o(n,t,e)}},b=function(){function e(e,o,n){this.http=e,this.basePath=g.a.basePath,this.defaultHeaders=new r.a,this.configuration=new p.a,o&&(this.basePath=o),n&&(this.configuration=n)}return e.prototype.upsertGeofence=function(e,o,n,t){return this.upsertGeofenceWithHttpInfo(e,o,n,t).map(function(e){return 204===e.status?void 0:e.json()})},e.prototype.upsertGeofenceWithHttpInfo=function(e,o,n,t){var i=this.basePath+"/geofence/upsert/"+e+"/"+o,a=new r.f,s=new r.a(this.defaultHeaders.toJSON());if(null===e||void 0===e)throw new Error("Required parameter atoken was null or undefined when calling upsertGeofence.");if(null===o||void 0===o)throw new Error("Required parameter geotype was null or undefined when calling upsertGeofence.");if(null===n||void 0===n)throw new Error("Required parameter dto was null or undefined when calling upsertGeofence.");s.set("Content-Type","application/json");var l=new r.e({method:r.d.Post,headers:s,body:null==n?"":JSON.stringify(n),search:a});return t&&(l=Object.assign(l,t)),this.http.request(i,l)},e}();b=f([Object(t.Injectable)(),m(1,Object(t.Optional)()),m(1,Object(t.Inject)(c.a)),m(2,Object(t.Optional)()),u("design:paramtypes",["function"==typeof(h=void 0!==d.a&&d.a)&&h||Object,String,"function"==typeof(y=void 0!==p.a&&p.a)&&y||Object])],b);var h,y,v=n("JxII"),O=this&&this.__decorate||function(e,o,n,t){var i,a=arguments.length,r=a<3?o:null===t?t=Object.getOwnPropertyDescriptor(o,n):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,n,t);else for(var s=e.length-1;s>=0;s--)(i=e[s])&&(r=(a<3?i(r):a>3?i(o,n,r):i(o,n))||r);return a>3&&r&&Object.defineProperty(o,n,r),r},x=this&&this.__metadata||function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},w=this&&this.__param||function(e,o){return function(n,t){o(n,t,e)}},G=function(){function e(e,o,n){this.http=e,this.basePath=g.a.basePath,this.defaultHeaders=new r.a,this.configuration=new p.a,o&&(this.basePath=o),n&&(this.configuration=n)}return e.prototype.deleteGeofence=function(e,o,n){return this.deleteGeofenceWithHttpInfo(e,o,n).map(function(e){return 204===e.status?void 0:e.json()})},e.prototype.deleteGeofenceWithHttpInfo=function(e,o,n){var t=this.basePath+"/geofence/delete/"+e+"/"+o,i=new r.f,a=new r.a(this.defaultHeaders.toJSON());if(null===e||void 0===e)throw new Error("Required parameter atoken was null or undefined when calling deleteGeofence.");if(null===o||void 0===o)throw new Error("Required parameter name was null or undefined when calling deleteGeofence.");var s=new r.e({method:r.d.Delete,headers:a,search:i});return n&&(s=Object.assign(s,n)),this.http.request(t,s)},e}();G=O([Object(t.Injectable)(),w(1,Object(t.Optional)()),w(1,Object(t.Inject)(c.a)),w(2,Object(t.Optional)()),x("design:paramtypes",["function"==typeof(M=void 0!==d.a&&d.a)&&M||Object,String,"function"==typeof(C=void 0!==p.a&&p.a)&&C||Object])],G);var M,C,T=this&&this.__decorate||function(e,o,n,t){var i,a=arguments.length,r=a<3?o:null===t?t=Object.getOwnPropertyDescriptor(o,n):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,n,t);else for(var s=e.length-1;s>=0;s--)(i=e[s])&&(r=(a<3?i(r):a>3?i(o,n,r):i(o,n))||r);return a>3&&r&&Object.defineProperty(o,n,r),r},j=this&&this.__metadata||function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},L=function(){function e(e,o,n,t){this._createUpdateGeofenceApi=e,this._listGeofencesApi=o,this._deleteGeofenceApi=n,this._cookieService=t,this.title="Geofence",this.lat=51.678418,this.lng=7.809007,this.geoStatus="label",this.minMaximizeFlag=!1,this.geofenceObj={name:"",geoType:"",label:"",description:"",coordinates:"",radius:50,geometries:"",locationSearch:"",coordinatesGroup:"",lat:"",lng:""},this.userObj={},this.geodata=[],this.markersGroup=[],this.circlesGroup=[],this.polygonGroup=[],this.polylineGroup=[],this.place={},this.geofence={latlng:"",address:"",title:"Test"}}return e.prototype.restoreRecord=function(){this.geofenceObj={name:"",geoType:"",label:"",description:"",coordinates:"",radius:50,geometries:"",locationSearch:"",lat:"",lng:""},$("#locationSearch").val("")},e.prototype.singleGeoSnapshot=function(e){var o=this,n={};"POINT"==e.geoType?(n.lat=e.coordinates[0],n.lng=e.coordinates[1]):"CIRCLE"==e.geoType?(n.lat=e.coordinates[0],n.lng=e.coordinates[1]):"LINESTRING"==e.geoType?(n.lat=e.coordinates[0][0],n.lng=e.coordinates[0][1]):"POLYGON"==e.geoType&&(n.lat=e.coordinates[0][0][0],n.lng=e.coordinates[0][0][1]),o.geoMapio.panTo(n),o.geoMapio.setZoom(17)},e.prototype.upsertGeofence=function(){var e=this,o={};o.coordinates=[],o.radius="",o.description=e.geofenceObj.description,o.geometries={type:"",coordinates:[]},"POINT"==e.geofenceObj.geoType?o.coordinates=[e.geofenceObj.lat,e.geofenceObj.lng]:"LINESTRING"==e.geofenceObj.geoType?o.coordinates=e.geofenceObj.coordinatesGroup:"CIRCLE"==e.geofenceObj.geoType?(o.coordinates=[e.geofenceObj.lat,e.geofenceObj.lng],o.radius=e.geofenceObj.radius):"POLYGON"==e.geofenceObj.geoType&&(o.coordinates=[],o.coordinates.push(e.geofenceObj.coordinatesGroup)),o.name=e.geofenceObj.name?e.geofenceObj.name.replace(/\s+/g,"+"):"",o.coordinates=JSON.stringify(o.coordinates),o.geoType=e.geofenceObj.geoType,o.label=e.geofenceObj.label,o.geometries.type=o.geoType,o.geometries.coordinates=o.coordinates,o.geometries=JSON.stringify(o.geometries),swal({title:"Confirmation",text:"Confirm to create this Geofence!",type:"info",showCancelButton:!0,confirmButtonColor:"#52B3D9",confirmButtonText:"Yes, Create!",cancelButtonText:"No, Edit",closeOnConfirm:!1,closeOnCancel:!1},function(n){n?e._createUpdateGeofenceApi.upsertGeofence(e.userObj.token,o.geoType,o).subscribe(function(o){o?(swal("Created!","Your Geofence has been Created.","success"),e.resetAll(),e.getGeofenceList()):swal("Error","Try Again","error")},function(e){e&&417===e.status&&(console.log(e),swal("417 Error","Invalid Parameters, Check Your Geofence Details!"+e,"error"))}):swal("Error","Now You Can Edit","info")})},e.prototype.resetAll=function(){var e=this;e.newGeoMarker&&e.newGeoMarker.setMap(null),e.newGeoCircle&&e.newGeoCircle.setMap(null),e.newGeoPolygon&&e.newGeoPolygon.setMap(null),e.newGeoPolyline&&e.newGeoPolyline.setMap(null),e.drawingManager&&e.drawingManager.setDrawingMode(null)},e.prototype.getGeofenceList=function(){var e=this;e.userObj&&(e.userObj=JSON.parse(this._cookieService.get("user_details")));this.userObj.token;e._listGeofencesApi.listGeofences(this.userObj.token,100).subscribe(function(o){_.each(o,function(e,o){e.createdAt=moment(e.createdAt).format("MM/DD/YYYY hh:mm:ss a")}),e.geodata=o,e.geofenceMapManagement(),google.maps.event.trigger(e.geoMapio,"resize"),e.restoreRecord()},function(e){e&&417===e.status&&console.log(e)})},e.prototype.openSlider=function(){$("#geofenceSlider").slideReveal("show")},e.prototype.overlayClickListener=function(e){var o=this;google.maps.event.addListener(e,"mouseup",function(e){$("#bskpCoordinatesBox").val(JSON.stringify(o.geofenceObj.coordinatesGroup))})},e.prototype.googleMapDrawingTool=function(){var e=this,o=e.geoMapio,n={strokeWeight:2,fillOpacity:.45,editable:!0,draggable:!0};e.drawingManager=new google.maps.drawing.DrawingManager({drawingMode:null,drawingControl:!0,drawingControlOptions:{position:google.maps.ControlPosition.TOP_CENTER,drawingModes:["marker","circle","polygon"]},markerOptions:{icon:"../../../../assets/images/marker_red.png"},circleOptions:{fillColor:"#FF0000",clickable:!1,editable:!0,zIndex:1,strokeColor:"#FF0000",strokeOpacity:.8,strokeWeight:2,fillOpacity:.35,draggable:!0},rectangleOptions:n,polygonOptions:n}),e.drawingManager.setMap(o);var t=e.drawingManager;google.maps.event.addListener(t,"overlaycomplete",function(o){$("#widgetButton").click(),e.overlayClickListener(o.overlay);var n=o.overlay;if(n.type=o.type,"POINT"==e.geofenceObj.geoType);else if("CIRCLE"==e.geofenceObj.geoType){var t=o.overlay;e.newGeoCircle=t;var i=e.newGeoCircle.getCenter().lat(),a=e.newGeoCircle.getCenter().lng();e.geofenceObj.lat=i,e.geofenceObj.lng=a,$("#bskpLat").val(i),$("#bskpLong").val(a),e.newGeoCircle.addListener("radius_changed",function(o){e.geofenceObj.radius=e.newGeoCircle.getRadius(),$("#bskpCircleRadius").val(e.geofenceObj.radius)}),e.newGeoCircle.addListener("center_changed",function(o){var n=e.newGeoCircle.getCenter().lat(),t=e.newGeoCircle.getCenter().lng();e.geofenceObj.lat=n,e.geofenceObj.lng=t,$("#bskpLat").val(n),$("#bskpLong").val(t)}),e.newGeoMarker&&(e.newGeoCircle.bindTo("center",e.newGeoMarker,"position"),e.newGeoMarker._myCircle=e.newGeoCircle,e.newGeoMarker.addListener("dragend",function(o){e.geofenceObj.lat=o.latLng.lat(),e.geofenceObj.lng=o.latLng.lng(),$("#bskpLat").val(e.geofenceObj.lat),$("#bskpLong").val(e.geofenceObj.lng)}))}else if("POLYGON"==e.geofenceObj.geoType){e.newGeoPolygon=n;var r=[];_.each(o.overlay.getPath().getArray(),function(e,o){var n=[];n.push(e.lat()),n.push(e.lng()),r.push(n)}),_.isEqual(r[0],r[r.length-1])||r.push(r[0]),e.geofenceObj.coordinatesGroup=r,$("#bskpCoordinatesBox").val(JSON.stringify(r))}else if("LINESTRING"==e.geofenceObj.geoType){e.newGeoPolyline=n;var s=[];_.each(o.overlay.getPath().getArray(),function(e,o){var n=[];n.push(e.lat()),n.push(e.lng()),s.push(n)}),e.geofenceObj.coordinatesGroup=s,$("#bskpCoordinatesBox").val(JSON.stringify(s))}e.mapTools("DEFAULT")})},e.prototype.mapTools=function(e){var o=this;$(".map-top-tools .min-tool-btn").removeClass("active"),$("#"+e).addClass("active"),"DEFAULT"==e?o.drawingManager.setDrawingMode(null):"POINT"==e?(o.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.MARKER),o.geofenceObj.geoType="POINT"):"CIRCLE"==e?(o.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.CIRCLE),o.geofenceObj.geoType="CIRCLE"):"POLYGON"==e?(o.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.POLYGON),o.geofenceObj.geoType="POLYGON"):"LINESTRING"==e?(o.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.POLYLINE),o.geofenceObj.geoType="LINESTRING"):"ENVELOPE"==e?(o.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.RECTANGLE),o.geofenceObj.geoType="ENVELOPE"):o.drawingManager.setDrawingMode(null)},e.prototype.drawingMode=function(e){var o=this;"CIRCLE"==o.geofenceObj.geoType?o.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.CIRCLE):"POLYGON"==o.geofenceObj.geoType?o.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.POLYGON):"LINESTRING"==o.geofenceObj.geoType?o.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.POLYLINE):"ENVELOPE"==o.geofenceObj.geoType&&o.drawingManager.setDrawingMode(google.maps.drawing.OverlayType.RECTANGLE)},e.prototype.searchLocationAPI=function(){var e=this,o=this.geoMapio,n=document.getElementById("locationSearch"),t=new google.maps.places.Autocomplete(n);t.bindTo("bounds",o),t.addListener("place_changed",function(){var o=t.getPlace();e.geofenceObj.autocomplete=t,e.geofenceObj.lat=o.geometry.location.lat(),e.geofenceObj.lng=o.geometry.location.lng()})},e.prototype.mapPreview=function(){var e=this,o=e.geofenceObj.autocomplete.getPlace(),n=e.geofenceObj.autocomplete.getPlace(),t=e.geoMapio;e.geofenceObj;google.maps.event.trigger(t,"resize");var i={url:"../../../../assets/images/marker_red.png",scaledSize:new google.maps.Size(32,32)};if(o.geometry){o.geometry.viewport?t.fitBounds(o.geometry.viewport):(t.setCenter(o.geometry.location),t.setZoom(17)),n.latlng=o.geometry.location,n.address=o.formatted_address;var a={title:e.geofenceObj.name,description:e.geofenceObj.description,location:n.address,lat:n.latlng.lat(),lng:n.latlng.lng(),strokeColor:"#08c",radius:n.radius,fillColor:"#08c"},r={lat:a.lat,lng:a.lng};e.newGeoMarker=new google.maps.Marker({map:e.geoMapio,position:new google.maps.LatLng(r),title:e.geofenceObj.name,animation:google.maps.Animation.DROP,draggable:!0,icon:i});var s=new google.maps.InfoWindow({content:a.title});e.newGeoMarker.addListener("click",function(){s.open(t,e.newGeoMarker),t.panTo(r),t.setZoom(17)}),s.open(t,e.newGeoMarker),"CIRCLE"==e.geofenceObj.geoType?(e.newGeoCircle=new google.maps.Circle({strokeColor:"#FF0000",editable:!0,strokeOpacity:.8,strokeWeight:2,fillColor:"#FF0000",fillOpacity:.35,draggable:!0,map:t,center:r,radius:100}),e.newGeoCircle.bindTo("center",e.newGeoMarker,"position"),e.newGeoMarker._myCircle=e.newGeoCircle,google.maps.event.addListener(e.newGeoCircle,"radius_changed",function(){e.geofenceObj.radius=e.newGeoCircle.getRadius(),$("#bskpCircleRadius").val(e.geofenceObj.radius)}),e.newGeoMarker.addListener("dragend",function(o){e.geofenceObj.lat=o.latLng.lat(),e.geofenceObj.lng=o.latLng.lng(),$("#bskpLat").val(e.geofenceObj.lat),$("#bskpLong").val(e.geofenceObj.lng)})):"LINESTRING"==e.geofenceObj.geoType||e.geofenceObj.geoType,e.mapTools("DEFAULT")}},e.prototype.minMaximize=function(){this.minMaximizeFlag?this.minMaximizeFlag=!1:this.minMaximizeFlag=!0},e.prototype.initialize=function(){var e=this;e.geoMapio=new google.maps.Map(document.getElementById("geoMap"),{zoom:5,center:{lat:13.010236,lng:80.215651},mapTypeId:"terrain"}),e.searchLocationAPI(),e.getGeofenceList(),e.googleMapDrawingTool()},e.prototype.geofenceMapManagement=function(){var e=this;e.markersGroup.length>0&&_.each(e.markersGroup,function(e,o){e.setMap(null)}),e.circlesGroup.length>0&&_.each(e.circlesGroup,function(e,o){e.setMap(null)}),e.polygonGroup.length>0&&_.each(e.polygonGroup,function(e,o){e.setMap(null)}),e.polylineGroup.length>0&&_.each(e.polylineGroup,function(e,o){e.setMap(null)});var o=[];_.each(e.geodata,function(n,t){if(n.geoType){if("POINT"==n.geoType){n.coordinates=JSON.parse(n.coordinates),n.description=n.description;var i={lat:n.coordinates[0],lng:n.coordinates[1]},a={url:"../../../../assets/images/marker_red.png"},r=new google.maps.InfoWindow({content:"<div><b style='text-transform: capitalize;font-size: 16px;color: #F62459;'>"+n.name+"</b></br><p style='font-size: 13px;color: #767676;margin-top:8px;text-transform: capitalize;margin-bottom:0px;width:200px;'><img src='../../../../assets/images/map/location-pin.png' >"+n.description+"</p><div style='margin-top:10px;'><p style='font-size: 11px;color: #888;display:inline-block;padding: 3px 6px;background: #eee;border-radius: 3px;margin-right: 5px;margin-bottom: 0px;'>"+n.label+"</p><p style='font-size: 13px;color: #767676;margin-top:8px;'><img src='../../../../assets/images/map/pin.png' > POINT</p></div></div>"}),s=new google.maps.Marker({map:e.geoMapio,position:new google.maps.LatLng(i),title:n.name,animation:google.maps.Animation.DROP,icon:a});s.addListener("click",function(){r.open(e.geoMapio,s),e.geoMapio.panTo(i),e.geoMapio.setZoom(17)}),r.open(e.geoMapio,s)}else if("CIRCLE"==n.geoType){n.coordinates=JSON.parse(n.coordinates);var i={lat:n.coordinates[0],lng:n.coordinates[1]},a={url:"../../../../assets/images/marker_red.png"},r=new google.maps.InfoWindow({content:"<div><b style='text-transform: capitalize;font-size: 16px;color: #F62459;'>"+n.name+"</b></br><p style='font-size: 13px;color: #767676;margin-top:8px;text-transform: capitalize;margin-bottom:0px;width:200px;'><img src='../../../../assets/images/map/location-pin.png' >"+n.description+"</p><div style='margin-top:10px;'><p style='font-size: 11px;color: #888;display:inline-block;padding: 3px 6px;background: #eee;border-radius: 3px;margin-right: 5px;margin-bottom: 0px;'>"+n.label+"</p><p style='font-size: 13px;color: #767676;margin-top:8px;'><img src='../../../../assets/images/map/oval.png' > CIRCLE</p></div></div>"}),s=new google.maps.Marker({map:e.geoMapio,position:new google.maps.LatLng(i),title:n.name,animation:google.maps.Animation.DROP,icon:a});s.addListener("click",function(){r.open(e.geoMapio,s),e.geoMapio.panTo(i),e.geoMapio.setZoom(17)}),r.open(e.geoMapio,s);var l=new google.maps.Circle({strokeColor:"#FF0000",strokeOpacity:.8,strokeWeight:2,fillColor:"#FF0000",fillOpacity:.35,map:e.geoMapio,center:i,radius:Number(n.radius)});e.circlesGroup.push(l)}else if("LINESTRING"==n.geoType){n.coordinates=JSON.parse(n.coordinates);var i={lat:n.coordinates[0][0],lng:n.coordinates[0][1]},a={url:"../../../../assets/images/marker_red.png"},r=new google.maps.InfoWindow({content:"<div><b style='text-transform: capitalize;font-size: 16px;color: #F62459;'>"+n.name+"</b></br><p style='font-size: 13px;color: #767676;margin-top:8px;text-transform: capitalize;margin-bottom:0px;width:200px;'><img src='../../../../assets/images/map/location-pin.png' >"+n.description+"</p><div style='margin-top:10px;'><p style='font-size: 11px;color: #888;display:inline-block;padding: 3px 6px;background: #eee;border-radius: 3px;margin-right: 5px;margin-bottom: 0px;'>"+n.label+"</p><p style='font-size: 13px;color: #767676;margin-top:8px;'><img src='../../../../assets/images/map/polyline.png' > LINESTRING</p></div></div>"}),s=new google.maps.Marker({map:e.geoMapio,position:new google.maps.LatLng(i),title:n.name,animation:google.maps.Animation.DROP,icon:a});s.addListener("click",function(){r.open(e.geoMapio,s),e.geoMapio.panTo(i),e.geoMapio.setZoom(17)}),r.open(e.geoMapio,s);var c=[];_.each(n.coordinates,function(e,o){var n={};n.lat=e[0],n.lng=e[1],c.push(n)});var p=new google.maps.Polyline({path:c,strokeColor:"#FF0000",strokeOpacity:1,strokeWeight:2});p.setMap(e.geoMapio),e.polylineGroup.push(p)}else if("POLYGON"==n.geoType){n.coordinates=JSON.parse(n.coordinates);var i={lat:n.coordinates[0][0][0],lng:n.coordinates[0][0][1]},a={url:"../../../../assets/images/marker_red.png"},r=new google.maps.InfoWindow({content:"<div><b style='text-transform: capitalize;font-size: 16px;color: #F62459;'>"+n.name+"</b></br><p style='font-size: 13px;color: #767676;margin-top:8px;text-transform: capitalize;margin-bottom:0px;width:200px;'><img src='../../../../assets/images/map/location-pin.png' >"+n.description+"</p><div style='margin-top:10px;'><p style='font-size: 11px;color: #888;display:inline-block;padding: 3px 6px;background: #eee;border-radius: 3px;margin-right: 5px;margin-bottom: 0px;'>"+n.label+"</p><p style='font-size: 13px;color: #767676;margin-top:8px;'><img src='../../../../assets/images/map/polygon.png' > POLYGON</p></div></div>"}),s=new google.maps.Marker({map:e.geoMapio,position:new google.maps.LatLng(i),title:n.name,animation:google.maps.Animation.DROP,icon:a});s.addListener("click",function(){r.open(e.geoMapio,s),e.geoMapio.panTo(i),e.geoMapio.setZoom(17)}),r.open(e.geoMapio,s);var g=[];_.each(n.coordinates[0],function(e,o){var n={};n.lat=e[0],n.lng=e[1],g.push(n)});var d=new google.maps.Polygon({paths:g,strokeColor:"#FF0000",strokeOpacity:.8,strokeWeight:2,fillColor:"#FF0000",fillOpacity:.35});d.setMap(e.geoMapio),e.polygonGroup.push(d)}o.push(i),e.markersGroup.push(s)}}),e.markerCluster=new MarkerClusterer(e.geoMapio,e.markersGroup,{imagePath:"../../../../assets/images/m"})},e.prototype.deleteAGeofence=function(e){var o=this;swal({title:"Confirmation",text:"Do you want to Delete this Geofence?",type:"warning",showCancelButton:!0,confirmButtonColor:"#F62459",confirmButtonText:"Yes, Delete!",cancelButtonText:"No, Edit",closeOnConfirm:!1,closeOnCancel:!1},function(n){n?e&&o._deleteGeofenceApi.deleteGeofence(o.userObj.token,e.name).subscribe(function(e){e?(swal("Deleted!","Geofence has been Deleted Successfully.","success"),o.getGeofenceList()):swal("Error","Try Again","error")},function(e){e&&417===e.status&&console.log(e)}):swal("Error","Back to the list","info")})},e.prototype.openCreateGeoModal=function(){$("#createGeoModal").modal({keyboard:!0,show:!0,backdrop:!1})},e.prototype.ngOnInit=function(){$("#geofenceSlider").slideReveal({push:!1,position:"right",trigger:$(".widgetButton"),autoEscape:!0,top:65}),google.maps.event.addDomListener(window,"load",this.initialize())},e}();L=T([Object(t.Component)({selector:"app-geofence",template:n("Ylor"),styles:[n("vGWb")]}),j("design:paramtypes",["function"==typeof(k=void 0!==b&&b)&&k||Object,"function"==typeof(I=void 0!==v.a&&v.a)&&I||Object,"function"==typeof(N=void 0!==G&&G)&&N||Object,"function"==typeof(P=void 0!==l.CookieService&&l.CookieService)&&P||Object])],L);var k,I,N,P,E=[{path:"geofence",component:L}];n.d(o,"GeofenceModule",function(){return S});var R=this&&this.__decorate||function(e,o,n,t){var i,a=arguments.length,r=a<3?o:null===t?t=Object.getOwnPropertyDescriptor(o,n):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,n,t);else for(var s=e.length-1;s>=0;s--)(i=e[s])&&(r=(a<3?i(r):a>3?i(o,n,r):i(o,n))||r);return a>3&&r&&Object.defineProperty(o,n,r),r},S=function(){function e(){}return e}();S=R([Object(t.NgModule)({imports:[i.CommonModule,r.c,a.a,s.d.forChild(E)],declarations:[L],providers:[b,v.a,G]})],S)},Ylor:function(e,o){e.exports='<div class="app-content content container-fluid dashboard" style="background-color: #eee">\n  <div class="content-wrapper" style="padding: 0;">\n    <div class="content-header row">\n    </div>\n    <div class="content-body">\n\n      <div>\n\n        <div class="map-top-tools">\n          <div class="map-tools">Tools</div>\n          <div class="g-list-tools">\n            \x3c!--\n            <button class="min-tool-btn btn widgetButton"> <i class="icon-plus" aria-hidden="true" ></i> </button>\n            <br>\n\n            <button class="min-tool-btn btn " > <i class="icon-search" aria-hidden="true"></i> </button>\n            <br>\n            <button class="min-tool-btn btn "> <i class="icon-filter" aria-hidden="true"></i> </button>--\x3e\n            <button class="min-tool-btn btn" id="DEFAULT" (click)="mapTools(\'DEFAULT\')" title="Move"> <i class="icon-hand-paper-o" aria-hidden="true"></i> </button>\n            <br>\n            <button class="min-tool-btn btn" (click)="resetAll()" title="Reset Map"> <i class="icon-refresh" aria-hidden="true"></i> </button>\n            <br>\n            <button class="min-tool-btn btn" id="POINT" (click)="mapTools(\'POINT\')" title="Marker / Point"> <i class="icon-map-marker" aria-hidden="true"></i> </button>\n            <br>\n            <button class="min-tool-btn btn" id="CIRCLE"  (click)="mapTools(\'CIRCLE\')" title="Circle"> <i class="icon-circle-o" aria-hidden="true"></i> </button>\n            <br>\n            <button class="min-tool-btn btn" id="LINESTRING"  (click)="mapTools(\'LINESTRING\')" title="Polyline"> <i class="icon-bars" aria-hidden="true"></i> </button>\n            <br>\n            <button class="min-tool-btn btn" id="POLYGON"  (click)="mapTools(\'POLYGON\')" title="Polygon"> <i class="icon-object-ungroup" aria-hidden="true"></i> </button>\n            <br>\n          </div>\n        </div>\n\n        <div class="row geo-manage">\n          <div class="col-md-12 g-m-box">\n            <div class="tool-head">\n              <span>Geofence List ({{ geodata.length }})</span>\n              <span class="pull-right g-list-tools" style="margin-left: 30px;">\n                      <button class="min-tool-btn btn widgetButton" > <i class="icon-plus" aria-hidden="true" style="color: #fff;"></i> </button>\n                      <button class="min-tool-btn btn " > <i class="icon-trash" aria-hidden="true" style="color: #fff;"></i> </button>\n                      <button class="min-tool-btn btn" (click)="minMaximize()">\n                        <i class="icon-expand" aria-hidden="true" style="color: #fff;"></i>\n                      </button>\n                \x3c!--<button class="min-tool-btn btn " > <i class="icon-times" aria-hidden="true" style="color: #fff;"></i> </button>--\x3e\n                  </span>\n            </div>\n            <div class="g-m-grid" *ngIf="minMaximizeFlag">\n              <table class="table table-hover geo-loc-list" style="width: 100%;">\n                <thead>\n                <tr class="g-m-tr">\n                  <th># </th>\n                  <th>Title <i class="icon-sort" aria-hidden="true"></i></th>\n                  <th>Geo. Type <i class="icon-sort" aria-hidden="true"></i></th>\n                  <th>Label<i class="icon-sort" aria-hidden="true"></i></th>\n                  <th>Updated Time <i class="icon-sort" aria-hidden="true"></i></th>\n                  <th>Actions</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr *ngFor="let oneGeo of geodata;let i = index;">\n                  <td scope="row">{{ i+1 }}</td>\n                  <td style="text-transform: capitalize;font-weight: 600;">{{ oneGeo.name }}</td>\n                  <td>\n\n                          <span *ngIf="oneGeo.geoType == \'POINT\'">\n                            <i class="icon-map-marker"></i>\n                          </span>\n\n                    <span *ngIf="oneGeo.geoType == \'CIRCLE\'">\n                            <i class="icon-circle-o"></i>\n                          </span>\n\n                    <span *ngIf="oneGeo.geoType == \'LINESTRING\'">\n                            <i class="icon-bars"></i>\n                          </span>\n\n                    <span *ngIf="oneGeo.geoType == \'POLYGON\'">\n                            <i class="icon-object-ungroup"></i>\n                          </span>\n\n                    <span>{{ oneGeo.geoType }}</span>\n\n                  </td>\n                  <td>{{ oneGeo.label }}</td>\n                  <td>{{ oneGeo.createdAt }}</td>\n                  <td>\n                    <a href="javascript:void(0)" (click)="singleGeoSnapshot(oneGeo);" ><i class="icon-eye" aria-hidden="true" style="color: #F62459;margin-top: 10px;"></i> Locate</a>\n                    <a href="javascript:void(0)" (click)="deleteAGeofence(oneGeo);" style="margin-left: 7px;margin-top: 10px;"> <i class="icon-trash" aria-hidden="true" style="color: #F62459;"></i> Delete</a>\n                  </td>\n                </tr>\n                </tbody>\n              </table>\n              <div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div id="geofenceSlider">\n        <div class="triggerWidget widgetButton">\n          <img src="../../../../assets/images/map_marker.png" width="32"/>\n        </div>\n\n        <h3>Create Geofence</h3>\n        <p class="widgetHeaderText">\n          <i>Create New Geofence Here!</i>\n        </p>\n\n        <form name="form" (ngSubmit)="geoCreateForm.form.valid && upsertGeofence()" #geoCreateForm="ngForm" novalidate class="login-form" style="max-height: 80vh;overflow-y: auto;">\n\n          <fieldset class="form-group position-relative has-icon-left">\n            <input type="text" class="form-control geo-input" placeholder="Geofence Name" name="name" #name="ngModel"  [(ngModel)]="geofenceObj.name"\n                   [ngClass]="{ \'has-error\': geoCreateForm.submitted && !name.valid }" >\n            <div class="form-control-position">\n              <i class="icon-map side-icon"></i>\n            </div>\n          </fieldset>\n\n          <fieldset class="form-group position-relative has-icon-left">\n            <input type="text" class="form-control geo-input" placeholder="Search Your Location" name="locationSearch" id="locationSearch">\n            <div class="form-control-position">\n              <i class="icon-location side-icon"></i>\n            </div>\n          </fieldset>\n          <fieldset class="form-group position-relative has-icon-left">\n            <select class="selectBox form-control geo-input" name="geoType"  #geoType="ngModel"  [(ngModel)]="geofenceObj.geoType" (change)="mapTools(geofenceObj.geoType)">\n              <option value="POINT">POINT</option>\n              <option value="CIRCLE">CIRCLE</option>\n\n              \x3c!--<option value="ENVELOPE">ENVELOPE</option>--\x3e\n              <option value="LINESTRING">LINESTRING</option>\n              <option value="POLYGON">POLYGON</option>\n              \x3c!--<option value="MULTIPOINT">MULTIPOINT</option>--\x3e\n              \x3c!--<option value="MULTILINESTRING">MULTILINESTRING</option>--\x3e\n              \x3c!--<option value="MULTIPOLYGON">MULTIPOLYGON</option>--\x3e\n              \x3c!--<option value="GEOMETRYCOLLECTION">GEOMETRYCOLLECTION</option>--\x3e\n            </select>\n\n            <div class="form-control-position">\n              <i class="icon-object-ungroup side-icon"></i>\n            </div>\n          </fieldset>\n\n\n          <div class="coordinates" *ngIf="geofenceObj.geoType">\n\n            <div *ngIf="geofenceObj.geoType == \'POINT\'">\n              <fieldset class="form-group position-relative has-icon-left near-by">\n                <input type="text" class="form-control geo-input" placeholder="Latitude" name="lat"  #lat="ngModel"  [(ngModel)]="geofenceObj.lat">\n                <div class="form-control-position">\n                  <i class="icon-location danger"></i>\n                </div>\n              </fieldset>\n\n              <fieldset class="form-group position-relative has-icon-left near-by">\n                <input type="text" class="form-control geo-input" placeholder="Longitude" name="lng"  #lng="ngModel"  [(ngModel)]="geofenceObj.lng">\n                <div class="form-control-position">\n                  <i class="icon-location warning"></i>\n                </div>\n              </fieldset>\n            </div>\n\n            <div *ngIf="geofenceObj.geoType == \'CIRCLE\'">\n\n              <p class="sm-title">Circle Center  <i style="font-size: 11px;">(Lat,Long)</i></p>\n\n              <fieldset class="form-group position-relative has-icon-left near-by">\n                <input type="text" class="form-control geo-input" placeholder="Latitude" name="lat"  #lat="ngModel"  [(ngModel)]="geofenceObj.lat" id="bskpLat">\n                <div class="form-control-position adj-icon">\n                  <i class="icon-location danger"></i>\n                </div>\n              </fieldset>\n\n              <fieldset class="form-group position-relative has-icon-left near-by">\n                <input type="text" class="form-control geo-input" placeholder="Longitude" name="lng"  #lng="ngModel"  [(ngModel)]="geofenceObj.lng" id="bskpLong">\n                <div class="form-control-position adj-icon">\n                  <i class="icon-location warning"></i>\n                </div>\n              </fieldset>\n\n              <p class="sm-title">Circle Radius <i style="font-size: 11px;">(meter)</i></p>\n              <fieldset class="form-group position-relative has-icon-left">\n                <input type="text" class="form-control geo-input" placeholder="Radius" name="radius"  #radius="ngModel"  [(ngModel)]="geofenceObj.radius" id="bskpCircleRadius">\n                <div class="form-control-position adj-icon">\n                  <i class="icon-circle-o warning"></i>\n                </div>\n              </fieldset>\n            </div>\n\n\n            <div *ngIf="geofenceObj.geoType == \'LINESTRING\'">\n\n              <p class="sm-title">Linestring Coordinates <i style="font-size: 11px;">(Eg: <code>[[-77.03, 38.89], [-77.05, 38.88]]</code>)</i></p>\n\n              <fieldset class="form-group position-relative has-icon-left">\n                <textarea type="text" class="form-control geo-input" placeholder="Enter Coordinates" name="coordinatesGroup"  #coordinatesGroup="ngModel"  [(ngModel)]="geofenceObj.coordinatesGroup" id="bskpCoordinatesBox"></textarea>\n                <div class="form-control-position adj-icon">\n                  <i class="icon-bars warning"></i>\n                </div>\n              </fieldset>\n            </div>\n\n\n            <div *ngIf="geofenceObj.geoType == \'POLYGON\'">\n\n              <p class="sm-title">Polygon Coordinates <i style="font-size: 11px;">(Eg: <code>[[-77.03, 38.89], [-77.05, 38.88],...,[-77.03, 38.89]]</code>)</i></p>\n\n              <fieldset class="form-group position-relative has-icon-left">\n                <textarea type="text" class="form-control geo-input" placeholder="Enter Coordinates" name="coordinatesGroup"  #coordinatesGroup="ngModel"  [(ngModel)]="geofenceObj.coordinatesGroup" id="bskpCoordinatesBox"></textarea>\n                \x3c!--<textarea type="text" class="form-control geo-input" placeholder="Enter Coordinates" id="bskpCoordinatesBox"></textarea>--\x3e\n                <div class="form-control-position adj-icon">\n                  <i class="icon-star-o warning"></i>\n                </div>\n              </fieldset>\n            </div>\n\n            <fieldset class="form-group" style="margin-bottom: 0;">\n              <a href="javascript:void(0)"  class="btn btn-warning btn-min-width mr-1 mb-1 geo-btn pull-right" (click)="mapPreview()"><i class="icon-eye"></i>Map Preview</a>\n            </fieldset>\n          </div>\n\n\n\n\n\n          <fieldset class="form-group position-relative has-icon-left" [ngClass]="{ \'has-error\': geoCreateForm.submitted && !label.valid }">\n            <input type="text" class="form-control geo-input" placeholder="Tag Your Geofence" name="label"  #label="ngModel"  [(ngModel)]="geofenceObj.label"\n                   [ngClass]="{ \'has-error\': geoCreateForm.submitted && !label.valid }">\n            <div class="form-control-position">\n              <i class="icon-tag side-icon"></i>\n            </div>\n          </fieldset>\n\n          <fieldset class="form-group position-relative has-icon-left" [ngClass]="{ \'has-error\': geoCreateForm.submitted && !description.valid }">\n          <textarea type="text" class="form-control geo-input" placeholder="Description" name="description"  #description="ngModel"  [(ngModel)]="geofenceObj.description"\n                    [ngClass]="{ \'has-error\': geoCreateForm.submitted && !description.valid }"></textarea>\n            <div class="form-control-position">\n              <i class="icon-align-left side-icon"></i>\n            </div>\n          </fieldset>\n\n          <fieldset class="form-group" style="margin-bottom: 60px;">\n            <button type="submit" id="createGeofence" class="btn btn-danger btn-min-width mr-1 mb-1 geo-btn pull-right">+ Create Geofence</button>\n          </fieldset>\n\n        </form>\n      </div>\n      <div id="geoMap"></div>\n\n\n    </div>\n  </div>\n</div>\n'},vGWb:function(e,o,n){o=e.exports=n("rP7Y")(!1),o.push([e.i,"agm-map{height:100vh;width:100%}.side-bar .title{height:40px;color:#666}.side-bar{height:86vh;width:200px;background:#fefefe;position:absolute;z-index:100}.triggerWidget{border-left:1px solid #f62459;padding:5px;background-color:#fff;color:#f62459;cursor:pointer;border-top:1px solid #f62459;border-bottom:1px solid #f62459}.widgetButton{cursor:pointer}#geofenceSlider{position:relative;background-color:#fff;border-left:1px solid #f62459;border-top:1px solid #f62459;border-bottom:1px solid #f62459;font-size:13px;z-index:1}#geofenceSlider h3{background-color:#f62459;color:#fff;margin-top:0;padding:10px;font-size:14px;font-weight:700}#geofenceSlider h4{font-size:13px;color:#666}#geofenceSlider a{text-decoration:none}#geofenceSlider .widgetHeaderText{font-size:12px;color:#ccc;padding:5px;border-bottom:1px solid #eee}#geofenceSlider .widgetPanel{list-style:none}#geofenceSlider .widgetPanel li{background-color:#fff}#geofenceSlider .widgetPanelContent{border:1px solid #ddd;text-align:center;padding:10px;box-shadow:0 0 31px -3px #ddd;cursor:pointer}#geofenceSlider .widgetPanelContent img{width:32px;height:32px}#geofenceSlider .widgetPanelContent span{font-size:11px;color:#666;display:block;margin-top:3px}#geofenceSlider .panel-body{background-color:hsla(0,0%,93%,.6)}.geo-input{width:90%;margin-left:13px;border-top:0;border-left:0;border-right:0;padding-left:20px;text-transform:capitalize}.geo-btn,.geo-input{border-radius:0}.form-control-position i{font-size:16px}.pull-right{float:right}#geoMap{height:100vh;width:100%}.tool-head{background:#f62459;color:#fff;font-size:15px;font-weight:600;padding:5px 10px}.min-tool-btn{min-width:20px;min-height:20px;line-height:20px;margin:0;padding:0}.map-top-tools{display:inline-block;position:absolute;top:80px;left:10px;z-index:1;background:#fff;text-align:center;width:60px;border-radius:3px;box-shadow:.2px .8px .7px #999}.map-top-tools .min-tool-btn{padding:10px;margin-top:2px;font-size:18px;color:#f62459;text-align:center;width:100%;border:1px solid #fff}.map-top-tools .min-tool-btn:hover{border:1px solid #f62459;background:#fff;color:#f62459}.map-top-tools .min-tool-btn.active{background:#f62459;color:#fff;border:1px solid #f62459}.map-top-search{display:inline-block;position:absolute;top:10px;left:10%;z-index:1}.md-tool-btn{min-width:30px;min-height:30px;line-height:30px;margin:0;padding:0}.geo-loc-list th{text-align:center!important}.geo-loc-list td{padding-top:20px!important;font-size:13px}.geo-loc-list td:last-child .md-button{text-transform:capitalize;margin-top:-3px;color:#777;font-size:13px;padding:3px;height:13px;line-height:13px}.geo-loc-list td:nth-child(2){font-weight:600}.geo-loc-list td:last-child{padding-top:10px!important}.g-list-tools i{margin-left:5px;margin-right:5px;cursor:pointer}.g-list-tools .btn,.map-top-tools .btn{background:transparent}.g-m-box{background:#fff;padding-right:0;padding-left:0}.geo-manage{position:fixed;left:255px;z-index:1;bottom:36px}.g-m-tr{background:#f6f6f6;color:#727272;font-weight:500;font-size:13px}.g-m-grid{height:200px;overflow:auto;width:100%}#geofenceSlider .triggerWidget{position:absolute;left:-43px;top:35px}.near-by{width:45%;vertical-align:top;display:inline-block}.sm-title{padding-left:15px;font-weight:500;color:#666}.coordinates{background:#efefef;margin:5px;padding:5px 0;border-radius:3px;border:1px solid #e6e6e6}.adj-icon{right:inherit;left:5px}.side-icon{color:#f62459}.map-tools{padding:2px;background:#f62459;font-size:11px;color:#fff;font-weight:600}.g-list-tools{padding:5px}",""]),e.exports=e.exports.toString()}});